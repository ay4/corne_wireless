/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
        tm: test_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "TEST_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";               default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  B/$  |  Y/_  |  O/[  |  U    |      |   |   //  |  L/!   |  D/]  |  W/*  |  Z/%  |        |
// | CTRL |  C/@  |  I    |  E/(  |  A/,  | /;   |   |  V/:  |  H/.   |  T/)  |  S    |  N/&  |  Q     |
// | SHFT |  G/=  |  X/<  |  J/{  |  K/'  | /"   |   |   /~  |  R/?   |  M/}  |  F/>  |  P/=  | SHIFT  |
//                             | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &tm DLLR B  &tm UNDER Y &tm LBKT O &kp U        &none            &tm FSLH FSLH   &tm EXCL L   &tm RBKT D  &tm STAR W  &tm PRCNT Z   &kp BSPC
   &kp LCTRL &tm AT C    &kp I       &tm LPAR E &tm COMMA A  &tm SEMI SEMI    &tm COLON V     &tm DOT H    &tm RPAR T  &kp S      &tm AMPS N    &kp SQT
   &kp LSHFT &tm EQUAL G &tm LT X    &tm LBRC J &tm APOS K   &tm DQT DQT      &tm TILDE TILDE &tm QMARK R  &tm RBRC M  &tm GT F   &tm EQUAL P   &kp LSHFT
                                                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
