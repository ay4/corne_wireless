    /*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define EN  0
#define RU  1
#define SYM 2
#define NAV 3
#define NUM 4
#define QWE 5

/ {
        macros {
        
        // Press a hotkey to switch
        // to a different layout in OS
        // and then toggle the language layer.

        to_ru: switch_to_ru {
            label = "switch_to_ru";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LG(LA(N2))>
                , <&tog RU>
                ;
        };

        to_en: switch_to_en {
            label = "switch_to_en";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LG(LA(N1))>
                , <&tog EN>
                ;
        };

        //
        // Switches to the QWERTY layer with
        // Left Command being held
        //
        cmd_qwerty: cmd_qwerty {
            label = "cmd_qwerty";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo QWE &kp LCMD>
                , <&macro_pause_for_release>
                , <&macro_release &mo QWE &kp LCMD>
                ;
        };

        //
        // Same for option
        //
        alt_qwerty: alt_qwerty {
            label = "alt_qwerty";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo QWE &kp LALT>
                , <&macro_pause_for_release>
                , <&macro_release &mo QWE &kp LALT>
                ;
        };
    };
        behaviors {
        // 
        // Mod-Special: Key if tapped,
        // macro (to switch to another layer possibly)
        // if held
        //    
        cmd_sp: cmd_sp {
            compatible = "zmk,behavior-hold-tap";
            label="CMD_SP"
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&cmd_qwerty>, <&kp>;
        };
  
        alt_sp: alt_sp {
            compatible = "zmk,behavior-hold-tap";
            label="ALT_SP"
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&alt_qwerty>, <&kp>;
        };

    };
 
        keymap {
                compatible = "zmk,keymap";               default_layer {
// -----------------------------------------------------------------------------------------
// | CTRL / TAB  |  B    |  Y    |  O    |  U    |      |   |       |  L     |  D    |  W    |  Z    |            |
// | MEH(?) /ESC |  C    |  I    |  E    |  A    |      |   |  V    |  H     |  T    |  S    |  N    |  Q         |
// | STICK SHFT  |  G    |  X    |  J    |  K    |      |   |       |  R     |  M    |  F    |  P    | STICK SHFT |
//                            | ⌘ / ↑ | ⌥ / ↓ | SYM/SPC |   | NUM/BACKSPACE | ←  | → |
                        bindings = <
   &mt LCTRL TAB          &kp B  &kp Y  &kp O &kp U   &none         &none   &kp L    &kp D  &kp W  &kp Z   &none
   &mt LC(LA(LSHFT)) ESC  &kp C  &kp I  &kp E &kp A   &none         &kp V   &kp H    &kp T  &kp S  &kp N   &kp Q
   &sk LSHFT              &kp G  &kp X  &kp J &kp K   &none         &none   &kp R    &kp M  &kp F  &kp P   &sk LSHFT
                 &alt_sp UP &cmd_sp DOWN &lt SYM SPACE     &lt NUM BSPC &kp LEFT &kp RIGHT
                        >;
                };
                                russian_layer {
// -----------------------------------------------------------------------------------------
// |  ___ |  Б  |  Ы  |   О  |  У  |  Э  |   |  Ц  |  Л  |  Д  |  З  |  Ъ  | ____ |
// |  ___ |  Ч  |  И  |   Е  |  А  |  Й  |   |  В  |  Ь  |  Т  |  С  |  Н  |  Ю   |
// | ____ |  Г  |  Ш  |   Ж  |  К  |  Щ  |   |  Х  |  Р  |  М  |  Ф  |  П  |      |
//                    | ___ | ___ |  ___ |   | ___ | ___ | ___ |
                        bindings = <
   &trans   &kp COMMA &kp S   &kp J     &kp E  &kp APOS    &kp W    &kp K  &kp L &kp P  &kp RBKT &trans
   &trans   &kp X     &kp B   &kp T     &kp F  &kp Q       &kp D    &kp M  &kp N &kp C  &kp Y    &kp GT
   &trans   &kp U     &kp I   &kp SEMI  &kp R  &kp O       &kp LBKT &kp H  &kp V &kp A  &kp G    &trans
                               &trans  &trans   &trans      &trans  &trans   &trans
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// | BT CLR  |  $  |  _  |  [  |  -    | --   |   |   / |  !   |  ]  |  *  |  %  | BT CH 3 |
// | BT CH 1 |  @  |  -- |  (  |  ,    |  ;   |   |  :  |  .   |  )  |  -- |  &  | BT CH 4 |
// | BT CH 2 |  =  |  <  |  {  |  '    |  "   |   |   ~ |  ?   |  }  |  >  |  =  | BT CH 5 |
//                       | XXX | XXX | XXX |   | RET | XXX  | XXX |
                        bindings = <
   &bt BT_CLR    &kp DLLR  &kp UNDER &kp LBKT &kp MINUS  &kp LA(LS(MINUS))       &kp FSLH   &kp EXCL   &kp RBKT  &kp STAR &kp PRCNT   &bt BT_SEL 2
   &bt BT_SEL 0  &kp AT    &none     &kp LPAR &kp COMMA  &kp SEMI                &kp COLON  &kp DOT    &kp RPAR  &none    &kp AMPS    &bt BT_SEL 3
   &bt BT_SEL 1  &kp EQUAL &kp LT    &kp LBRC &kp APOS   &kp DQT                 &kp TILDE  &kp QMARK  &kp RBRC  &kp GT   &kp EQUAL   &bt BT_SEL 4
                                         &none &none &none                  &kp RET &none &none
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// | ____   |  ____  |  ← TAB |     ↑  |    TAB → |     ___  |   | ___ | ← ⌘⇧ | ⌥ ↑ | ⇧⌘ →| ___    | ___      |
// | ____   |  ____  |  ← ⌥   |     ↓  |    ⌥ →   |     ___  |   | ___ | ← ⌥⇧ | ⌥ ↓ | ⌥⇧ →| ___    | ___      |
// | BL CLS | BLCH 1 | BLCH 2 | BLCH 3 | BLCH 4   |  BLCH 5  |   | ___ | ___  | ___ | ___ | PWR ON | PWR OFF  |
//                                        | ___ | ___ |  ___ |    | ENTER | ___ | ___ |
                        bindings = <
   &trans      &trans        &kp LG(LS(LBKT)) &kp UP       &kp LG(LS(RBKT)) &trans         &trans &kp LG(LS(LEFT)) &kp LA(UP)   &kp LG(LS(RIGHT))  &trans           &trans
   &trans      &trans        &kp LA(LEFT)     &kp DOWN     &kp LA(RIGHT)    &trans         &trans &kp LA(LS(LEFT)) &kp LA(DOWN) &kp LA(LS(RIGHT))  &trans           &trans
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2 &bt BT_SEL 3     &bt BT_SEL 4   &trans &trans           &trans       &trans             &ext_power EP_ON &ext_power EP_OFF 
                                                               &trans  &trans   &trans     &kp RET  &trans   &trans
                        >;
                };

                                num_layer {
// -----------------------------------------------------------------------------------------
// | ____   |  ____  |  ____ |  ____  | ____ | ___  |      | ___ | 1 | 2 | 3 | ___ | ___  |
// | ____   |  ____  |  ____ |  ____  | ____ | ___  |      | ___ | 4 | 5 | 6 | ___ | ___  |
// | ____   |  ____  |  ____ |  ____  | ____ | ___  |      | ___ | 7 | 8 | 9 | ___ | ___  |
//                               | ___ | ___ |  ___ |      | ___ |  0  | 0 |
                        bindings = <
   &trans   &trans  &trans  &trans  &trans  &trans         &trans  &kp N1   &kp N2  &kp N3  &trans  &trans
   &trans   &trans  &trans  &trans  &trans  &trans         &trans  &kp N4   &kp N5  &kp N6  &trans  &trans
   &trans   &trans  &trans  &trans  &trans  &trans         &trans  &kp N7   &kp N8  &kp N9  &trans  &trans 
                            &trans  &trans  &trans         &trans   &kp N0 &kp N0
                        >;
                };
                            qwerty_layer {
// -----------------------------------------------------------------------------------------
// | ____   |  Q  |  W |  E  | R | T  |      | Y | U | I | O | P | [  |
// | ____   |  A  |  S |  D  | F | G  |      | H | J | K | L | ; | '  |
// | ____   |  Z  |  X |  C  | V | B  |      | N | M | , | . | / |    |
//                 | ___ | ___ |  ___ |       | ___ | ___ | ___ |
                        bindings = <
   &trans   &kp Q  &kp W  &kp E  &kp R  &kp T         &kp Y  &kp U   &kp I      &kp O    &kp P     &kp LBKT
   &trans   &kp A  &kp S  &kp D  &kp F  &kp G         &kp H  &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
   &trans   &kp Z  &kp X  &kp C  &kp V  &kp B         &kp N  &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans 
                     &trans  &trans   &trans          &trans  &trans   &trans
                        >;
                };
        };
};
